app: aws-lambda-golang-serverless-framework
service: aws-lambda-golang-serverless-framework

frameworkVersion: ">=2.24.0"

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'prototype'}
  stackName: golang-serverless-offline
  timeout: 900
  environment:
    region: ${env:AWS_REGION, 'us-west-2'}
    DISABLE_XRAY_TRACING: 1
    AWS_XRAY_CONTEXT_MISSING: LOG_ERROR
    _X_AMZN_TRACE_ID: 0
    AWS_XRAY_LOG_LEVEL: silent #https://github.com/dherault/serverless-offline/issues/327
    DYNAMODB_TABLE: test-development
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${env:DYNAMODB_TABLE}"

plugins:
  - serverless-offline
  - serverless-localstack
custom:
  localstack:
    host: http://localhost
    autostart: true
    endpoints:
      DynamoDB: http://localhost:4566
    lambda:
      # Enable this flag to improve performance
      mountCode: True

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  test:
    handler: bin/test
    package:
      include:
        - ./bin/test
    events:
      - http:
          path: test
          method: get
          cors: true

  list:
    handler: bin/list
    package:
      include:
        - ./bin/list
    events:
      - http:
          path: list
          method: get
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${env:DYNAMODB_TABLE}
